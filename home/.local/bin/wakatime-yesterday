#!/usr/bin/env bash
# :module: WakaTime productivity tracking for previous day

# Check for --raw flag
RAW_MODE=false
if [ "$1" = "--raw" ]; then
    RAW_MODE=true
fi

# Get yesterday's date in YYYY-MM-DD format
YESTERDAY=$(date -v-1d '+%Y-%m-%d' 2>/dev/null || date -d 'yesterday' '+%Y-%m-%d')

# WakaTime API key - try environment variable first, then config file
API_KEY="${WAKATIME_API_KEY}"

# If not in environment, try to read from config file
if [ -z "$API_KEY" ]; then
    CONFIG_FILE="$HOME/.config/wakatime/.wakatime.cfg"
    if [ -f "$CONFIG_FILE" ]; then
        # Parse api_key from the config file
        API_KEY=$(awk -F '=' '/^api_key/ {gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2}' "$CONFIG_FILE")
    fi
fi

if [ -z "$API_KEY" ]; then
    echo "Error: WakaTime API key not found"
    echo "Set WAKATIME_API_KEY environment variable or add to ~/.config/wakatime/.wakatime.cfg"
    exit 1
fi

# Don't show header in raw mode
if [ "$RAW_MODE" = false ]; then
    echo "WakaTime Summary for $YESTERDAY"
    echo "================================"
fi

# Base64 encode the API key for Basic auth
ENCODED_KEY=$(echo -n "$API_KEY" | base64)

# Make API request (using correct URL and Basic auth)
response=$(curl -s -H "Authorization: Basic $ENCODED_KEY" \
    "https://api.wakatime.com/api/v1/users/current/summaries?start=$YESTERDAY&end=$YESTERDAY")

# Check if request was successful
if echo "$response" | grep -q '"errors"'; then
    echo "Error fetching data:"
    echo "$response" | jq -r '.errors[]'
    echo ""
    echo "Make sure your WAKATIME_API_KEY is set correctly."
    echo "Get your API key from: https://wakatime.com/settings/account"
    exit 1
fi

if echo "$response" | grep -q '"error"'; then
    echo "Error fetching data:"
    echo "$response" | jq -r '.error'
    exit 1
fi

# Output based on mode
if [ "$RAW_MODE" = true ]; then
    echo "$response"
else
    # Parse and display the data
    if echo "$response" | jq -e '.data[0]' > /dev/null 2>&1; then
        echo "$response" | jq -r '
            .data[0] | 
            "Total Time: \(.grand_total.text // "0 hrs 0 mins")
Projects:
\(if .projects and (.projects | length) > 0 then (.projects | map("  • \(.name): \(.text)") | join("\n")) else "  No projects tracked" end)
Languages:
\(if .languages and (.languages | length) > 0 then (.languages | map("  • \(.name): \(.text)") | join("\n")) else "  No languages tracked" end)
Editors:
\(if .editors and (.editors | length) > 0 then (.editors | map("  • \(.name): \(.text)") | join("\n")) else "  No editors tracked" end)"
        '
    else
        echo "No data available for $YESTERDAY"
        echo ""
        echo "Debug info:"
        echo "$response" | jq '.'
    fi
fi