#!/bin/bash
# :module: Generates and manages Claude documentation resources
set -euo pipefail

# Simple claude-code-docs installer for local repos
# Usage: claude-docs [install]

REPO_DIR="$XDG_DATA_HOME/docs/claude-code-docs"

install_docs_command() {
    echo "Setting up /docs command..."
    mkdir -p ~/.claude/commands
    
    # Create the /docs command
    cat > ~/.claude/commands/docs.md << EOF
Execute the Claude Code Docs helper script at $REPO_DIR/claude-docs-helper.sh

Usage:
- /docs - List all available documentation topics
- /docs <topic> - Read specific documentation with link to official docs
- /docs -t - Check sync status without reading a doc
- /docs -t <topic> - Check freshness then read documentation
- /docs whats new - Show recent documentation changes (or "what's new")

Execute: $REPO_DIR/claude-docs-helper.sh "\$ARGUMENTS"
EOF
    
    echo "✓ Created /docs command"
}

setup_helper_script() {
    echo "Installing helper script..."
    if [[ -f "$REPO_DIR/scripts/claude-docs-helper.sh.template" ]]; then
        cp "$REPO_DIR/scripts/claude-docs-helper.sh.template" "$REPO_DIR/claude-docs-helper.sh"
        chmod +x "$REPO_DIR/claude-docs-helper.sh"
        echo "✓ Helper script installed"
    else
        echo "❌ Template file missing: $REPO_DIR/scripts/claude-docs-helper.sh.template"
        exit 1
    fi
}

# Main logic
if [ -d "$REPO_DIR" ]; then
    cd "$REPO_DIR"
    echo "Updating existing repository..."
    git pull
else
    echo "Cloning repository..."
    git clone  https://github.com/ericbuess/claude-code-docs "$REPO_DIR"
    cd "$REPO_DIR"
    # git sparse-checkout set docs scripts
fi

# If 'install' argument provided, set up the command
if [[ "${1:-}" == "install" ]]; then
    setup_helper_script
    install_docs_command
    echo ""
    echo "✅ Claude Code Docs installed successfully!"
    echo "Usage: /docs <topic>"
fi
