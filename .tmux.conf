#-------------------------------------------------------------------------------------------------``
#--- Global
#--------------------------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -s escape-time 10
# set -sg repeat-time 400                   # allow moving between panes quicker, turned off while using prefixless pane movement
set -g history-limit 5000                 # boost history

set -g mouse on
set -g set-titles on          # set terminal title

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set -g base-index 1           # start windows numbering at 1

bind r command-prompt -p "Rename Session:" "rename-session '%%'"

# VI like
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# set -g @menus_trigger 'x'
# set -g @menus_location_x 'C'
# set -g @menus_location_y 'C'
# set -g @plugin 'jaclu/tmux-menus' -- this is nice, but don't have much need for now

# TMUX_FZF_SESSION_FORMAT
# TMUX_FZF_WINDOW_FORMAT
# TMUX_FZF_LAUNCH_KEY="C-f"
TMUX_FZF_LAUNCH_KEY="\\;"
TMUX_FZF_PANE_FORMAT="#{window_index}.#{pane_index} #{?window_active,+,}#{window_name} - #{pane_current_command} #{pane_current_path}"
set -g @plugin 'sainnhe/tmux-fzf'

#-------------------------------------------------------------------------------------------------``
#--- Session
#--------------------------------------------------------------------------------------------------
# don't kill session when last window is closed
set-option -g detach-on-destroy off

# change 'project'
bind-key p run-shell 'nu -l -c "tmux switch"'
bind-key f run-shell 'nu -l -c "tmux sessionizer"'

bind-key 0 run-shell 'nu -l -c "tmux sessionizer 0"'
bind-key 1 run-shell 'nu -l -c "tmux sessionizer 1"'
bind-key 2 run-shell 'nu -l -c "tmux sessionizer 2"'
bind-key 3 run-shell 'nu -l -c "tmux sessionizer 3"'
bind-key 4 run-shell 'nu -l -c "tmux sessionizer 4"'
bind-key 5 run-shell 'nu -l -c "tmux sessionizer 5"'
bind-key 6 run-shell 'nu -l -c "tmux sessionizer 6"'
bind-key 7 run-shell 'nu -l -c "tmux sessionizer 7"'
bind-key 8 run-shell 'nu -l -c "tmux sessionizer 8"'
bind-key 9 run-shell 'nu -l -c "tmux sessionizer 9"'

# create session
bind N command-prompt -p "New Session:" "new-session -s '%%' -n main"

bind -r BTab switch-client -l  # move to last session
bind -r a switch-client -l  # move to last session

bind-key w run-shell "~/.local/bin/tmux-work"

#-------------------------------------------------------------------------------------------------``
#--- Window
#--------------------------------------------------------------------------------------------------
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g main-pane-width 60% # good for default main layout (bound to C-=)

bind n new-window -c "#{pane_current_path}"

# 'list' windows
bind "l" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/window.sh switch"

# override terminal to send these, they could actually be anything really
bind -n -r C-M-[ previous-window # select previous window
bind -n -r C-M-] next-window # select previous window
bind -r Tab last-window        # move to last active window
bind BSpace kill-window

bind o kill-window -a # kill all other windows, similar to vim behaviour

#-------------------------------------------------------------------------------------------------``
#--- Pane
#--------------------------------------------------------------------------------------------------
setw -g pane-base-index 1     # make pane numbering consistent with windows

bind Space resize-pane -Z # zoom pane
bind = select-layout main-vertical # reset layout to my prefered |-
unbind !
# bind ! select-layout c8ed,429x57,0,0{95x57,0,0[95x28,0,0,2,95x28,0,29,32],333x57,96,0,1} # layout -|
# bind-key m select-layout 4431,429x57,0,0{108x57,0,0[108x28,0,0,33,108x28,0,29,36],320x57,109,0,1}
unbind m
bind-key "m" run-shell -b "${DOTFILES}/.local/bin/tmux-layout"

# pane movement
set -g @plugin 'christoomey/vim-tmux-navigator' # move between vim/tmux smoothly
# bind -r h select-pane -L
# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r l select-pane -R

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# split panes using | and -
unbind '"'
unbind %
bind -r - split-window -c "#{pane_current_path}"
bind -r | split-window -h -c "#{pane_current_path}"


# 'join' another pane, swapping it for another
bind-key "j" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/pane.sh swap"
# bind-key u command-prompt -p "join pane from:"  "swap-pane -t '%%'"

# dismiss current pane
bind-key b break-pane -d

set -g @fuzzback-popup 1
set -g @plugin 'roosta/tmux-fuzzback' # prefix + ? to fzf history

# set -g @jump-key 's'
# set -g @plugin 'schasse/tmux-jump'

#-------------------------------------------------------------------------------------------------``
#--- UI
#--------------------------------------------------------------------------------------------------
# TODO: one day sort this out
# set -g default-terminal "xterm-256color-italic"
set -g default-terminal "xterm-kitty"
# set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@' # not sure what this does anymore
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# The modes
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour209,bg=colour08,bold

# The panes
set -g pane-border-style bg="default",fg="#686868"
set -g pane-active-border-style bg="default",fg="blue"

#-------------------------------------------------------------------------------------------------``
#--- STATUS LINE
#--------------------------------------------------------------------------------------------------
set -g status-interval 2 # frequency in seconds of refresh
set -g status-justify left
set -g status-position top
set -g status-style bg="default",fg="white"

set -g @cpu_low_fg_color "#[fg=#686868]"
set -g @cpu_medium_fg_color "#[fg=yellow]"
set -g @cpu_high_fg_color "#[fg=red]"

set -g status-right-length 100
set -g status-left-length 100

set -g status-left '#[fg=magenta,bg=default,bold]#{?client_prefix,#[fg=violet],}   #S#[fg=normal,bg=default]  '
set -g status-right '#(nu -l -c "ical coming-up 1000min | ical format tmux") c:#{sysstat_cpu} m:#{sysstat_mem} s:#{sysstat_swap}  #H '

# window status
set -g window-status-current-format "#[fg=magenta, bold] #W#{?window_zoomed_flag,#[bold]+,}"
set -g window-status-format "#[fg=normal] #W#{?window_zoomed_flag,#[bold]+,}"

set -g window-status-bell-style fg=colour255,bg=colour1,bold

# The messages
set -g message-command-style fg=magenta,bg=default
set -g message-style fg="magenta",bg="default",bold

#-------------------------------------------------------------------------------------------------``
#--- PLUGINS
#--------------------------------------------------------------------------------------------------
set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color}]#{cpu.pused}#[fg=default]'
set -g @sysstat_mem_view_tmpl '#[fg=#{mem.color}]#{mem.pused}#[fg=default]'
set -g @sysstat_swap_view_tmpl '#[fg=#{swap.color}]#{swap.pused}#[fg=default]'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# C-s to save C-r to reload
# set -g @plugin 'tmux-plugins/tmux-resurrect' 
# set -g @resurrect-strategy-nvim 'session'

# automatically saves and loads resurrect sesisons
# needs to come last to use the status-right variable
# set -g @plugin 'tmux-plugins/tmux-continuum' 
# set -g @continuum-boot 'on' # start up tmux on boot
# set -g @continuum-boot-options 'kitty'
# set -g @continuum-restore 'on' # reload last session
# set -g @continuum-save-interval '15'

# set -g @plugin 'wfxr/tmux-fzf-url' # prefix + u to fzf urls

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'
