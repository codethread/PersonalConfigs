#!/usr/bin/env nu

const tokenUrl = "https://git.perkbox.io/-/profile/personal_access_tokens?name=Example+Access+token&scopes=read_api,read_user";

export def main [] {
  let email = me
  list-mrs $email
}

def list-mrs [email: string] {
  let fullPath = glab mr view --output json | from json | get web_url

  let query = "query MR($fullPath: ID!, $author: String!) {
       project(fullPath: $fullPath) {
        name
        mergeRequests(state: opened, authorUsername: $author) {
          count
          nodes {
            webUrl
            title
            diffStatsSummary {
              additions
              changes
              deletions
              fileCount
            }
            approvalsLeft
            approvedBy {
              nodes {
                name
              }
            }
          }
        }
      }
    }"

  let body = { 
    operationName: "MR"
    query: ($query | query-format)
    variables: {
      fullPath: ($fullPath | parse-url | get app)
      author: ($email)
    }
  }

  $body | table --collapse | print $in


  (http post 
    -t application/json 
    -H [Authorization $"Bearer ($env.CLI_GITLAB_TOKEN)"] 
    https://git.perkbox.io/api/graphql $body)
  | get data.project.mergeRequests.nodes
  | where webUrl == $fullPath
  | first
  | format-for-slack
  | message-slack
}

def format-for-slack [] {
  let x = $in
  let diff = $x.diffStatsSummary
  $":mr: <($x.webUrl)|($x.title)> [diff: +($diff.additions) -($diff.deletions) ~($diff.additions), files: ($diff.fileCount)]\nthanks :slightly_smiling_face:"
}

def message-slack [] {
  let msg = $in

  (http post https://perkbox.slack.com/api/chat.postMessage
    -t application/json 
    -H [
      accept-language 'en-US,en;q=0.9'
      accept "*/*"
      cookie $"d=(auth | get d); d-s=(auth | get ds);"
      content-type "application/json;charset=UTF-8"
      authorization $"Bearer (auth | get token)"
      user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36'
    ]
    { 
      channel: "CEEG2DKCG", 
      text: $msg, 
      type: 'mrkdwn'
    })
}

def auth [] {
  open `~/.local/share/slacky/slack.nuon`
}

def parse-url [] {
  url parse
  | get path
  | parse "/{app}/-/merge_requests/{number}"
  | first
}

# get author email or error
def me [] {
  let query = "query WhoAmI {
  currentUser {
    name
  }
}"

  let body = { 
    operationName: "WhoAmI"
    query: ($query | query-format)
  }

  let user = (http post 
    -t application/json 
    -H [Authorization $"Bearer ($env.CLI_GITLAB_TOKEN)"] 
    https://git.perkbox.io/api/graphql $body)
  

  if ($user | get data.currentUser | is-empty) {
    print $tokenUrl
    error make -u {
      msg: $"Not logged in create a new token at âŒƒ"
    }
  }


  $user | table --collapse | print $in

  $user | get data.currentUser.name
}

def query-format []: string -> string {
    $in | str replace --all "\n" " " | str replace --all "  " ""
}
