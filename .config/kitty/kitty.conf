# vim:fileencoding=utf-8:ft=conf:foldmethod=marker:foldlevel=0

# reload with <C-S-,>

#: Fonts {{{

font_family        FiraCode Nerd Font Retina
font_size 13.0

#: variants. To get a full list of supported fonts use the `kitty
#: list-fonts` command.

# IBM settings
# font_family        BlexMono Nerd Font Book
# italic_font        BlexMono Nerd Font Italic
# bold_font          BlexMono Nerd Font Bold
# bold_font          FiraCode Nerd Font Bold
# bold_italic_font   BlexMono Nerd Font Bold Italic
# font_size 14.0

adjust_line_height  130%
# adjust_column_width 0

#: }}}
#: Mouse {{{

mouse_hide_wait 0.1
# url_color #0087bd
url_style curly
url_prefixes http https file ftp /Users

copy_on_select clipboard
# remove trailing spaces
strip_trailing_spaces smart 

#: }}}
#: Window layout {{{

window_padding_width 3
hide_window_decorations titlebar-only
# hide_window_decorations no

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only can be used to only hide the titlebar.
#: Whether this works and exactly what effect it has depends on the
#: window manager/operating system.

confirm_os_window_close 0
# close without confirmation

#: }}}
#: Tab bar {{{

tab_bar_edge top

#: Which edge to show the tab bar on, top or bottom

tab_bar_margin_width 5.0

#: The margin to the left and right of the tab bar (in pts)

tab_bar_style separator

#: The tab bar style, can be one of: fade, separator, powerline, or
#: hidden. In the fade style, each tab's edges fade into the
#: background color, in the separator style, tabs are separated by a
#: configurable separator, and the powerline shows the tabs as a
#: continuous line.

# tab_bar_min_tabs 2

#: The minimum number of tabs that must exist before the tab bar is
#: shown

# tab_switch_strategy previous

#: The algorithm to use when switching to a tab when the current tab
#: is closed. The default of previous will switch to the last used
#: tab. A value of left will switch to the tab to the left of the
#: closed tab. A value of last will switch to the right-most tab.

# tab_fade 0.25 0.5 0.75 1

#: Control how each tab fades into the background when using fade for
#: the tab_bar_style. Each number is an alpha (between zero and one)
#: that controls how much the corresponding cell fades into the
#: background, with zero being no fade and one being full fade. You
#: can change the number of cells used by adding/removing entries to
#: this list.

tab_separator " "

#: The separator between tabs in the tab bar when using separator as
#: the tab_bar_style.

# tab_title_template "{title}"

#: A template to render the tab title. The default just renders the
#: title. If you wish to include the tab-index as well, use something
#: like: {index}: {title}. Useful if you have shortcuts mapped for
#: goto_tab N. In addition you can use {layout_name} for the current
#: layout name and {num_windows} for the number of windows in the tab.
#: Note that formatting is done by Python's string formatting
#: machinery, so you can use, for instance, {layout_name[:2].upper()}
#: to show only the first two letters of the layout name, upper-cased.

# active_tab_title_template none

#: Template to use for active tabs, if not specified falls back to
#: tab_title_template.
# active_tab_foreground   #D8DEE9
# active_tab_background   #2E3440
# active_tab_font_style   bold-italic
# inactive_tab_foreground #81A1C1
# inactive_tab_background #2E3440
# inactive_tab_font_style normal

#: Tab bar colors and styles

# tab_bar_background none

#: Background color for the tab bar. Defaults to using the terminal
#: background color.

#: }}}
#: Advanced {{{

# onde day...
# shell nu --login

clipboard_control write-clipboard write-primary no-append

# term xterm-kitty

#: }}}
#: OS specific tweaks {{{

macos_option_as_alt yes

macos_show_window_title_in all

# macos_custom_beam_cursor no

#: Enable/disable custom mouse cursor for macOS that is easier to see
#: on both light and dark backgrounds. WARNING: this might make your
#: mouse cursor invisible on dual GPU machines.

#: }}}
#: Keyboard shortcuts {{{

#: For a list of key names, see: the GLFW key macros
#: <https://github.com/kovidgoyal/kitty/blob/master/glfw/glfw3.h#L349>.
#: The name to use is the part after the GLFW_KEY_ prefix. For a list
#: of modifier names, see: GLFW mods
#: <https://www.glfw.org/docs/latest/group__mods.html>

#: On Linux you can also use XKB key names to bind keys that are not
#: supported by GLFW. See XKB keys
#: <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
#: keysyms.h> for a list of key names. The name to use is the part
#: after the XKB_KEY_ prefix. Note that you can only use an XKB key
#: name for keys that are not known as GLFW keys.

#: Finally, you can use raw system key codes to map keys, again only
#: for keys that are not known as GLFW keys. To see the system key
#: code for a key, start kitty with the kitty --debug-keyboard option.
#: Then kitty will output some debug text for every key event. In that
#: text look for ``native_code`` the value of that becomes the key
#: name in the shortcut. For example:

# sends C-M-[ for tmux binding
map cmd+shift+[ send_text normal,application \x1b\x1b
# sends C-M-] for tmux binding
map cmd+shift+] send_text normal,application \x1b\x1d

#: }}}

# BEGIN_KITTY_THEME
# Tokyo Night Storm
include current-theme.conf
# END_KITTY_THEME
