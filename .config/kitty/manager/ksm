#!/bin/bash

LOG_FILE="${XDG_DATA_HOME:-$HOME}/kitty/ksm.log"
LOG_TS_FILE="${XDG_DATA_HOME:-$HOME}/kitty/ksm-ts.log"
CACHE_FILE="${XDG_DATA_HOME:-$HOME}/kitty/ksm-cache.json"

if [ -f "$LOG_FILE" ]; then
  truncate -s 0 "$LOG_FILE"
  truncate -s 0 "$LOG_TS_FILE"
else
  mkdir "$(dirname "$LOG_FILE")"
fi

# Run the command - only redirect stderr to log file, let stdout go to terminal
LOG_TS_FILE="${LOG_TS_FILE}" CACHE_FILE="${CACHE_FILE}" node --experimental-strip-types "${HOME}/.config/kitty/manager/src/session-manager.ts" "$@" 2>>"$LOG_FILE"
EXIT_CODE=$?

# If command failed, show error notification and open log file
if [ $EXIT_CODE -ne 0 ]; then
  # Check if we're running in kitty terminal
  if [ "$TERM" = "xterm-kitty" ] && command -v kitten >/dev/null 2>&1; then
    # Use kitten notify for desktop notification
    kitten notify --icon error --urgency critical \
      "KSM Session Manager Failed" \
      "Exit code: $EXIT_CODE. Opening log file for details." 2>/dev/null

    # Open log file in new OS window for examination
    kitten @ launch --type=os-window --title="KSM Error Log" \
      --tab-title="Error Log" \
      sh -c "echo 'KSM Session Manager Error Log (Exit Code: $EXIT_CODE)'; echo '═══════════════════════════════════════════════════'; echo; tail -50 '$LOG_FILE'; echo; echo 'Full log file: $LOG_FILE'; echo 'Press any key to close...'; read -n 1" 2>/dev/null
  else
    # Fallback: show error in terminal
    echo ""
    echo "🚨 KSM Session Manager Failed (Exit Code: $EXIT_CODE)"
    echo "Check log file: $LOG_FILE"
  fi
fi

exit $EXIT_CODE
