# Configuration for Alacritty, the GPU enhanced terminal emulator

env:
  TERM: xterm-256color-italic

window:
  dimensions:
    columns: 200
    lines: 80
  padding:
    x: 6
    y: 0
  dynamic_padding: false
  decorations: buttonless
  opacity: 1.0

scrolling:
  history: 10000
  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3
  # Scroll to the bottom when new text is written to the terminal.
  auto_scroll: false

tabspaces: 4
# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

font:
  normal:
    family: Hack Nerd Font
  bold:
    family: Hack Nerd Font
  italic:
    family: Hack Nerd Font
    # family: Roboto Mono for Powerline

  size: 12.0
  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 1
    y: 4
  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0
  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true

# Should display the render timer
# render_timer: false

# Colors (Snazzy)
# colors:
  # # Default colors
  # primary:
  #   # background: '0x282a36' # snazzy
  #   background: '0x272935' # doom
  #   foreground: '0xc1c1c1'
  # # Normal colors
  # normal:
  #   # black:   '0x282a36' # snazzy
  #   # black:   '0x272935' # doom
  #   black:   '0x4e2b49' # custom
  #   red:     '0xff5c57'
  #   green:   '0x5af78e'
  #   yellow:  '0xf3f99d'
  #   blue:    '0x57c7ff'
  #   magenta: '0xff6ac1'
  #   cyan:    '0x9aedfe'
  #   white:   '0xf1f1f0'
  # # Bright colors
  # bright:
  #   # black:   '0x3a3d4d' # doom
  #   black:   '0x61616d' # custom
  #   red:     '0xff5c57'
  #   green:   '0x5af78e'
  #   yellow:  '0xf3f99d'
  #   blue:    '0x57c7ff'
  #   magenta: '0xff6ac1'
  #   cyan:    '0x9aedfe'
  #   white:   '0xf1f1f0'
  #
colors:
  primary:
    background: '#2e3440'
    foreground: '#d8dee9'
    dim_foreground: '#a5abb6'
  cursor:
    text: '#2e3440'
    cursor: '#d8dee9'
  vi_mode_cursor:
    text: '#2e3440'
    cursor: '#d8dee9'
  selection:
    text: CellForeground
    background: '#4c566a'
  search:
    matches:
      foreground: CellBackground
      background: '#88c0d0'
    bar:
      background: '#434c5e'
      foreground: '#d8dee9'
  normal:
    black: '#3b4252'
    red: '#bf616a'
    green: '#a3be8c'
    yellow: '#ebcb8b'
    blue: '#81a1c1'
    magenta: '#b48ead'
    cyan: '#88c0d0'
    white: '#e5e9f0'
  bright:
    black: '#4c566a'
    red: '#bf616a'
    green: '#a3be8c'
    yellow: '#ebcb8b'
    blue: '#81a1c1'
    magenta: '#b48ead'
    cyan: '#8fbcbb'
    white: '#eceff4'
  dim:
    black: '#373e4d'
    red: '#94545d'
    green: '#809575'
    yellow: '#b29e75'
    blue: '#68809a'
    magenta: '#8c738c'
    cyan: '#6d96a5'
    white: '#aeb3bb'

# Visual Bell
# Possible values for `animation` 
# `Ease` `EaseOut` `EaseOutSine` `EaseOutQuad` `EaseOutCubic` `EaseOutQuart` `EaseOutQuint` `EaseOutExpo` `EaseOutCirc` `Linear`
# To completely disable the visual bell, set its duration to 0.
visual_bell:
  animation: Ease
  duration: 0

# Background opacity
# background_opacity: 1.0

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: true

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

dynamic_title: true

cursor:
  # - Block | Underline | Beam
  style: Block
# Live config reload (changes require restart)
live_config_reload: true
shell:
  program: /bin/zsh

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
key_bindings:
  - { key: V,        mods: Command, action: Paste                        }
  - { key: C,        mods: Command, action: Copy                         }
  - { key: Paste,                   action: Paste                        }
  - { key: Copy,                    action: Copy                         }
  - { key: Q,        mods: Command, action: Quit                         }
  - { key: W,        mods: Command, action: Quit                         }
  - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
  - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
  - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
  - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: Key0,     mods: Command, action: ResetFontSize                }
  - { key: Equals,   mods: Command, action: IncreaseFontSize             }
  - { key: Minus,    mods: Command, action: DecreaseFontSize             }
  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
  - { key: PageUp,                  chars: "\x1b[5~"                     }
  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
  - { key: PageDown,                chars: "\x1b[6~"                     }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
  - { key: Back,                    chars: "\x7f"                        }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
  - { key: Insert,                  chars: "\x1b[2~"                     }
  - { key: Delete,                  chars: "\x1b[3~"                     }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  - { key: F1,                      chars: "\x1bOP"                      }
  - { key: F2,                      chars: "\x1bOQ"                      }
  - { key: F3,                      chars: "\x1bOR"                      }
  - { key: F4,                      chars: "\x1bOS"                      }
  - { key: F5,                      chars: "\x1b[15~"                    }
  - { key: F6,                      chars: "\x1b[17~"                    }
  - { key: F7,                      chars: "\x1b[18~"                    }
  - { key: F8,                      chars: "\x1b[19~"                    }
  - { key: F9,                      chars: "\x1b[20~"                    }
  - { key: F10,                     chars: "\x1b[21~"                    }
  - { key: F11,                     chars: "\x1b[23~"                    }
  - { key: F12,                     chars: "\x1b[24~"                    }
  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                   }
  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                   }
  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                   }
  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                   }
  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                  }
  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                  }
  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                  }
  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                  }
  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                  }
  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                  }
  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                  }
  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                  }
  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                   }
  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                   }
  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                   }
  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                   }
  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                  }
  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                  }
  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                  }
  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                  }
  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                  }
  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                  }
  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                  }
  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                  }
  - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                   }
  - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                   }
  - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                   }
  - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                   }
  - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                  }
  - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                  }
  - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                  }
  - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                  }
  - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                  }
  - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                  }
  - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                  }
  - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                  }
  - { key: F1,       mods: Command, chars: "\x1b[1;3P"                   }
  - { key: F2,       mods: Command, chars: "\x1b[1;3Q"                   }
  - { key: F3,       mods: Command, chars: "\x1b[1;3R"                   }
  - { key: F4,       mods: Command, chars: "\x1b[1;3S"                   }
  - { key: F5,       mods: Command, chars: "\x1b[15;3~"                  }
  - { key: F6,       mods: Command, chars: "\x1b[17;3~"                  }
  - { key: F7,       mods: Command, chars: "\x1b[18;3~"                  }
  - { key: F8,       mods: Command, chars: "\x1b[19;3~"                  }
  - { key: F9,       mods: Command, chars: "\x1b[20;3~"                  }
  - { key: F10,      mods: Command, chars: "\x1b[21;3~"                  }
  - { key: F11,      mods: Command, chars: "\x1b[23;3~"                  }
  - { key: F12,      mods: Command, chars: "\x1b[24;3~"                  }
    # alt as meta: https://github.com/jwilm/alacritty/issues/62#issuecomment-347552058
  - { key: A,        mods: Alt,       chars: "\x1ba"                       }
  - { key: B,        mods: Alt,       chars: "\x1bb"                       }
  - { key: C,        mods: Alt,       chars: "\x1bc"                       }
  - { key: D,        mods: Alt,       chars: "\x1bd"                       }
  - { key: E,        mods: Alt,       chars: "\x1be"                       }
  - { key: F,        mods: Alt,       chars: "\x1bf"                       }
  - { key: G,        mods: Alt,       chars: "\x1bg"                       }
  - { key: H,        mods: Alt,       chars: "\x1bh"                       }
  - { key: I,        mods: Alt,       chars: "\x1bi"                       }
  - { key: J,        mods: Alt,       chars: "\x1bj"                       }
  - { key: K,        mods: Alt,       chars: "\x1bk"                       }
  - { key: L,        mods: Alt,       chars: "\x1bl"                       }
  - { key: M,        mods: Alt,       chars: "\x1bm"                       }
  - { key: N,        mods: Alt,       chars: "\x1bn"                       }
  - { key: O,        mods: Alt,       chars: "\x1bo"                       }
  - { key: P,        mods: Alt,       chars: "\x1bp"                       }
  - { key: Q,        mods: Alt,       chars: "\x1bq"                       }
  - { key: R,        mods: Alt,       chars: "\x1br"                       }
  - { key: S,        mods: Alt,       chars: "\x1bs"                       }
  - { key: T,        mods: Alt,       chars: "\x1bt"                       }
  - { key: U,        mods: Alt,       chars: "\x1bu"                       }
  - { key: V,        mods: Alt,       chars: "\x1bv"                       }
  - { key: W,        mods: Alt,       chars: "\x1bw"                       }
  - { key: X,        mods: Alt,       chars: "\x1bx"                       }
  - { key: Y,        mods: Alt,       chars: "\x1by"                       }
  - { key: Z,        mods: Alt,       chars: "\x1bz"                       }
  - { key: A,        mods: Alt|Shift, chars: "\x1bA"                       }
  - { key: B,        mods: Alt|Shift, chars: "\x1bB"                       }
  - { key: C,        mods: Alt|Shift, chars: "\x1bC"                       }
  - { key: D,        mods: Alt|Shift, chars: "\x1bD"                       }
  - { key: E,        mods: Alt|Shift, chars: "\x1bE"                       }
  - { key: F,        mods: Alt|Shift, chars: "\x1bF"                       }
  - { key: G,        mods: Alt|Shift, chars: "\x1bG"                       }
  - { key: H,        mods: Alt|Shift, chars: "\x1bH"                       }
  - { key: I,        mods: Alt|Shift, chars: "\x1bI"                       }
  - { key: J,        mods: Alt|Shift, chars: "\x1bJ"                       }
  - { key: K,        mods: Alt|Shift, chars: "\x1bK"                       }
  - { key: L,        mods: Alt|Shift, chars: "\x1bL"                       }
  - { key: M,        mods: Alt|Shift, chars: "\x1bM"                       }
  - { key: N,        mods: Alt|Shift, chars: "\x1bN"                       }
  - { key: O,        mods: Alt|Shift, chars: "\x1bO"                       }
  - { key: P,        mods: Alt|Shift, chars: "\x1bP"                       }
  - { key: Q,        mods: Alt|Shift, chars: "\x1bQ"                       }
  - { key: R,        mods: Alt|Shift, chars: "\x1bR"                       }
  - { key: S,        mods: Alt|Shift, chars: "\x1bS"                       }
  - { key: T,        mods: Alt|Shift, chars: "\x1bT"                       }
  - { key: U,        mods: Alt|Shift, chars: "\x1bU"                       }
  - { key: V,        mods: Alt|Shift, chars: "\x1bV"                       }
  - { key: W,        mods: Alt|Shift, chars: "\x1bW"                       }
  - { key: X,        mods: Alt|Shift, chars: "\x1bX"                       }
  - { key: Y,        mods: Alt|Shift, chars: "\x1bY"                       }
  - { key: Z,        mods: Alt|Shift, chars: "\x1bZ"                       }
  - { key: Key1,     mods: Alt,       chars: "\x1b1"                       }
  - { key: Key2,     mods: Alt,       chars: "\x1b2"                       }
  - { key: Key3,     mods: Alt,       chars: "\x1b3"                       }
  - { key: Key4,     mods: Alt,       chars: "\x1b4"                       }
  - { key: Key5,     mods: Alt,       chars: "\x1b5"                       }
  - { key: Key6,     mods: Alt,       chars: "\x1b6"                       }
  - { key: Key7,     mods: Alt,       chars: "\x1b7"                       }
  - { key: Key8,     mods: Alt,       chars: "\x1b8"                       }
  - { key: Key9,     mods: Alt,       chars: "\x1b9"                       }
  - { key: Key0,     mods: Alt,       chars: "\x1b0"                       }
  - { key: Space,    mods: Control,   chars: "\x00"                        } # Ctrl + Space
  - { key: Grave,    mods: Alt,       chars: "\x1b`"                       } # Alt + `
  - { key: Grave,    mods: Alt|Shift, chars: "\x1b~"                       } # Alt + ~
  - { key: Period,   mods: Alt,       chars: "\x1b."                       } # Alt + .
  - { key: Key8,     mods: Alt|Shift, chars: "\x1b*"                       } # Alt + *
  - { key: Key3,     mods: Alt|Shift, chars: "\x1b#"                       } # Alt + #
  - { key: Period,   mods: Alt|Shift, chars: "\x1b>"                       } # Alt + >
  - { key: Comma,    mods: Alt|Shift, chars: "\x1b<"                       } # Alt + <
  - { key: Minus,    mods: Alt|Shift, chars: "\x1b_"                       } # Alt + _
  - { key: Key5,     mods: Alt|Shift, chars: "\x1b%"                       } # Alt + %
  - { key: Key6,     mods: Alt|Shift, chars: "\x1b^"                       } # Alt + ^
  - { key: Backslash, mods: Alt,       chars: "\x1b\\"                      } # Alt + \
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"                       } # Alt + |
