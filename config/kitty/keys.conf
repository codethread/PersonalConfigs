# vim:fileencoding=utf-8:foldmethod=marker:foldlevel=0

#: setup {{{

# default, keeping here as reference
kitty_mod ctrl+shift
map cmd+enter toggle_fullscreen
map ctrl+tab no_op
map ctrl+shift+tab no_op

# enter prefix mode with C-a (like tmux)
map --new-mode tmux --on-action end ctrl+a
# exit prefix mode (unlike tmux, any unmapped key exits)
map --mode tmux escape pop_keyboard_mode

action_alias _switcher launch --type=background --copy-env switch-session.sh
action_alias _bg launch --allow-remote-control --type=background
action_alias _overlay launch --allow-remote-control --type=overlay

#: }}}
#: debug {{{

# https://sw.kovidgoyal.net/kitty/actions/#debugging
# kitten @ --help
# kitty --debug-input
# kitty kitten show-key
# kitty kitten show-key -m kitty
map f1 show_kitty_env_vars
# map ? show_settings -- default
map f2 debug_config

#: }}}
#: tabs / sessions {{{

map --mode tmux shift+r set_tab_title
map --mode tmux p select_tab

map --mode tmux f _overlay git-session

map --mode tmux n new_tab_with_cwd !neighbor

map --mode tmux x close_window
# focus last tab regardless of session (tabs don't seem to track history)
map --mode tmux tab goto_tab -1

map --mode tmux o close_other_windows_in_tab
# close other session tabs
map --mode tmux shift+o _bg kitten @ close-tab --match "not state:focused and session:~"

map --mode tmux backspace close_tab
# close session (builtin `close_session .` seems buggy, can't reopen session)
map --mode tmux shift+backspace _bg kitten @ close-tab --match "session:~"

# buggy, hopefully fixed one day
# map --mode tmux p goto_session

# tmux: prefix + w (work-start-work)
# map --mode tmux w launch --type=tab --location=after --hold --cwd=current --copy-env kitty-work-window
# map --mode tmux shift+w launch --type=tab --location=after --hold --cwd=current --copy-env kitty-native-window

# Session switching with keys (P0-P9)
map --mode tmux 0 _switcher 0
map --mode tmux 1 _switcher 1
map --mode tmux 2 _switcher 2
map --mode tmux 3 _switcher 3
map --mode tmux 4 _switcher 4
map --mode tmux 5 _switcher 5
map --mode tmux 6 _switcher 6
map --mode tmux 7 _switcher 7
map --mode tmux 8 _switcher 8
map --mode tmux 9 _switcher 9

#: }}}
#: layout {{{

map --mode tmux bar launch --location=vsplit --cwd=current
map --mode tmux minus launch --location=hsplit --cwd=current
map --mode tmux space _bg zoom-or-split.sh

map --mode tmux equal _bg toggle-layout.sh
map --mode tmux m move_window_to_top
map --mode tmux enter layout_action bias 50 62 70

#: }}}
#: windows {{{

# rotations
map --mode tmux } move_window_forward
map --mode tmux { move_window_backward

# window resizing (tmux: prefix + H/J/K/L)
map kitty_mod+h resize_window wider 5
map kitty_mod+l resize_window narrower 2
map kitty_mod+j resize_window shorter 2
map kitty_mod+k resize_window taller 2

# Navigation between kitty windows (vim-style)
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right

# Unset the mapping to pass the keys to neovim when focused on nvim
map --when-focus-on var:IS_NVIM ctrl+j
map --when-focus-on var:IS_NVIM ctrl+k
map --when-focus-on var:IS_NVIM ctrl+h
map --when-focus-on var:IS_NVIM ctrl+l

# Window resizing (vim-style with alt modifier)
# the 3 here is the resize amount, adjust as needed
map alt+j kitten relative_resize.py down  3
map alt+k kitten relative_resize.py up    3
map alt+h kitten relative_resize.py left  3
map alt+l kitten relative_resize.py right 3

# Unset alt mappings when focused on nvim
map --when-focus-on var:IS_NVIM alt+j
map --when-focus-on var:IS_NVIM alt+k
map --when-focus-on var:IS_NVIM alt+h
map --when-focus-on var:IS_NVIM alt+l

# pane history navigation (limited kitty equivalent)
map alt+] scroll_to_prompt 1
map --when-focus-on var:IS_NVIM alt+]
map alt+[ scroll_to_prompt -1
map --when-focus-on var:IS_NVIM alt+[

#: }}}
#: fingering {{{

# cargo install thumbs
# based on a similar approach to tmux-fingers, these commands are for selection of paths to then open in vim.
# use scrollback for just copying

# Pass screen to thumbs to select url, then pass and focus active nvim window
map --mode tmux l _overlay --stdin-source=@screen thumb.sh

# Thumb the other windows, via selection. id is passed to return focus back
map --when-focus-on var:IS_NVIM --mode tmux l _bg thumb-other.sh @active-kitty-window-id

#: }}}
#: history {{{

scrollback_pager nvim -u NONE -R -c 'lua require("codethread.kitty+page")(INPUT_LINE_NUMBER, CURSOR_LINE, CURSOR_COLUMN)' -

map --mode tmux [ show_scrollback

# open last command output
map alt+p _overlay --title="scrollback search"
\ --stdin-source=@last_cmd_output --stdin-add-formatting --copy-colors
\ nvim -u NONE -R -c 'lua require("codethread.kitty+page")(0,0,0)' -
map --when-focus-on var:IS_NVIM alt+p

#: }}}
#: system {{{

map --mode tmux semicolon _overlay menu.sh

# send C-a to application if pressed twice (like tmux C-b C-b)
map --mode tmux ctrl+a send_text all \x1

# reload configuration
map --mode tmux r combine : load_config_file : kitten notify --expire-after 2s Configuration reloaded! : pop_keyboard_mode

#: }}}
#: mouse {{{

# Show clicked command output in nvim
mouse_map ctrl+shift+right press ungrabbed mouse_select_command_output

#: }}}
#: scratch / WIP {{{

# keep mac emoji picker -- can't be done https://github.com/kovidgoyal/kitty/issues/1507
# map cmd+ctrl+space kitten unicode_input --emoji-variation graphic

#: }}}
