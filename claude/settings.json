{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "true",
    "CLAUDE_CODE_DISABLE_TERMINAL_TITLE": "false",
    "USE_BUILTIN_RIPGREP": "0"
  },
  "permissions": {
    "allow": [
      "mcp__context7__resolve-library-id",
      "WebSearch",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:sw.kovidgoyal.net)",
      "WebFetch(domain:www.nushell.sh)",
      "Bash(ls:*)",
      "Bash(fd:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(time:*)",
      "Bash(MANPAGER='cat' man:*)",
      "Read(//Users/codethread/.local/share/docs/claude-code-docs/**)",
      "Read(//Users/codethread/.claude/**)",
      "Bash(npm run:*)",
      "Bash(pnpm run:*)",
      "Bash(yarn run:*)",
      "Bash(bun run:*)",
      "Bash(bun check:*)",
      "Bash(cargo check:*)",
      "Bash(cargo test:*)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(git diff:*)",
      "Bash(git add:*)",
      "Bash(git lfs pull:*)",
      "Bash(glab:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(kitten:*)",
      "Bash(kitty @:*)",
      "Bash(speak:*)",
      "Bash(speak-ts:*)",
      "Bash(cc-speak:*)",
      "Bash(whisper-cli:*)",
      "Bash(chatterbox-tts:*)",
      "Bash(cindex:*)",
      "Bash(prepend-comment:*)",
      "Bash(~/.local/bin/bra:*)",
      "Bash(/Users/codethread/PersonalConfigs/.local/bin/notif:*)",
      "Bash(/Users/codethread/PersonalConfigs/.local/bin/notif test:*)",
      "Bash(nu:*)",
      "Bash(~/.local/bin/nu:*)",
      "Bash(bun ~/.claude/x-hooks/agent-docs-injection.ts)",
      "Bash(/Users/codethread/PersonalConfigs/oven/bin/claude-memory-loader.ts)",
      "Bash(/Users/codethread/PersonalConfigs/oven/bin/claude-memory-loader.ts --help)",
      "Read(//tmp/**)"
    ],
    "deny": [
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "Read(.env)",
      "Read(.env.*)",
      "Read(**/.env)",
      "Read(**/.env.*)",
      "Read(**/secrets/**)",
      "Read(**/*.key)",
      "Read(**/*.pem)",
      "Read(**/id_rsa*)"
    ],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "~/.local/cache/docs",
      "~/.local/bin"
    ]
  },
  "model": "opus",
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "node ~/.claude/x-hooks/use_npm_redirect.js"
          }
        ]
      },
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path' | { read file_path; if echo \"$file_path\" | grep -qE '\\.(json|md)$'; then bunx prettier --print-width=120 --write \"$file_path\"; fi; }"
          }
        ]
      },
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          },
          {
            "type": "command",
            "command": "~/.claude/x-hooks/agent-docs-injection.ts"
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "claude-code-logger"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bun x ccusage statusline",
    "padding": 0
  },
  "feedbackSurveyState": {
    "lastShownTime": 1754027278114
  }
}